
'number' + 23 + 32   //'number2332'// оскільки перший операнд це рядок, тому компілятор опрацьовує наступні операнди теж як рядки і сумує їх в один рядок
41 + 1 + 'number'   //'42number' //спочатку виконується дія з числами 41+4=42, а потім результат сумується з рядком таким чином 42+number=42number
null + 1            //1 //null стає 0 після числового перетворення таким чином 0+1=1
'five' + + 'two'    //якщо операнд не є числом то унарний плюс перетворить його на число +'two'=NaN  і в результаті маємо fiveNaN
2 && 7              // 7// всі операнди були обчислені(тобто усі true), тоді повертає останній операнд 7
+ '40' + +'2';      //42 //якщо операнд не є числом то унарний плюс перетворить його на число і маємо 40 + 2= 42
'10' - 5 === 6;     //false //'10'-5=5 оскільки арефметичний оператор'-'перетворює свої операнди на числа, далі  при виконанні строгого порівняння 5===6 дасть false
true + false        //повертає 1, оскільки true=1 false=0 1+0=1
'4px' - 3           //повертає NaN, оскільки неможливо виконати математичну дію
'4' - 3             // повертає 1 //оскільки арефметичний оператор'-'перетворює свої операнди на числа 4-3=1
'2' + 3 ** 2;       //'29'//в данному випадку діє пріорітетність операторів піднесення в степінь ** має вищий порядок за +, тому спершу виконується дія 3**2=9, а потім рядок сумується з числовим операндом
12 / '6'            //2 //оскільки арефметичний оператор'/'перетворює свої операнди на числа маємо  12/6=2
23 + 42 + 'number'  //'65number'//спочатку виконується дія з числами 23+42, а потім результат сумується з рядком 65+'number'='65number'
'10' + (5 === 6);   //'10false'//за пріорітетністю спочатку виконується дія в дужках яка дає нам результат false, оскільки 5 не рівне 6. Далі рядок сумується з отриманим результатом '10'+false = '10false'
'number' + 15 + 3   //'number153'//оскільки перший операнд це рядок, тому компілятор опрацьовує наступні операнди теж як рядки


undefined + 1;            // результат = NaN , оскільки undefined стає NaN  після числового перетворення
'true' == true           // результат = false Оскільки операнди різного типу перетворюються оператором == на числа, тому рядок'true'= 0 і відповідно вираз 0==1 дає нам false
false == 'false'        // false
null == ''              //результат = false  значення null не перетворюються на інші типи, вонo рівнe один одному і не рівнe будь-чому іншому sтому цей вираз дає нам false
3 ** (9 / 3);           // результат = 27 Перший крок вконуємо дію в дужках 9/3=3 ,далі виконуємо піднесення в ступінь 3**3=27
!!'false' == !!'true'   //результат = true оцінюється як true, оскільки непорожній рядок є "правдивий"
0 || '0' && 1;          //результат =1 За пріорітетністю спочатку виконується дія з оператором && та повертає нам значення 1. Другий крок цеце виконання оператора ||
1 < 2 < 3               //результат=true вираз 1<2=true 2<3 =true
'foo'+ + +'bar'                 //результат ='fooNaN'// вираз  +'bar' дає нам значення NaN,оскільки його не можливо перетворити в числовий операнд. Другий крок це по*єднання рядка 'foo'++NaN='fooNaN'
3 ** 2 / 3;                     //результат = 3// 3 в 2 степені дає нам 9 і 9розділяємо на 3 отримаємо результат 3
1 < 2 > 3                      //результат =  false//1<2 дає нам  true, true>3 дає нам false оскільки true рівне 1.
(+null == false) < 1;         //результат = false  // вираз +null дає нам 0/ Вираз (0==false) дає нам true. Останнє порівняння true<1 дає нам false
false && true || true        //результат = true  // false && true  дає нам false (якщо перший операнд хибний то другий ігнорується), далі порівнюємо отриманий результат false || true дає нам true оскільки оператор працює доти доки не досягне першого правдивого значення ,після чого негайно повертає це значення
false && (true || true);    //результат =  false // перше виконуємо порівняння в дужках і отримаємо результат  true, далі порівнюємо false && true і отримуємо  false, оскілький оперант шукає перше хибне значення   
(+null == false) < 1 ** 5;  //результат =  false //перше виконуємо порівняння в дужках +null дає нам 0, далі 0==false дає нам true. Наступний крок це 1в 5 степені повертає нам 1. І останній крок це порівння true<1 що повертає нам false.